version: '3'

volumes: 
  pgdata:
  cassandra_data:
    driver: local

networks:
  kong-net:
    driver: bridge

services: 
  api-service:
    container_name: ${PROJECT}.api.service
    image: ${PROJECT}.api.service:dev-${TAG}
    restart: ${SERVICES_RESTART_TYPE}
    env_file: 
      - .env
    build: 
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 8030:3000
  
  postgres:
    container_name: ${PROJECT}.api.service.postgres
    image: postgres:12.4-alpine
    environment: 
      - POSTGRES_USER=${PGSQL_DB_USER}
      - POSTGRES_PASSWORD=${PGSQL_DB_PASSWORD}
      - POSTGRES_DB=${PGSQL_DB_NAME}
    volumes: 
      - pgdata:/var/lib/postgres

  kong-database:
    image: postgres:9.6-alpine
    restart: always
    networks:
      - kong-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migration:
    image: kong:latest
    container_name: ${PROJECT}.kong.migration
    command: "kong migrations bootstrap"
    networks: 
      - kong-net
    restart: on-failure
    environment: 
      KONG_PG_HOST: kong-database
    links:
      - kong-database
    depends_on: 
      - kong-database

  kong:
    image: kong:latest
    container_name: ${PROJECT}.kong
    restart: always
    networks: 
      - kong-net
    ports: 
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"
    environment:
      KONG_PG_HOST: kong-database
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_LISTEN_SSL: 0.0.0.0:8444
    links:
      - kong-database
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
  
  konga-prepare:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database
  
  konga:
    image: pantsel/konga:next
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      TOKEN_SECRET: TOKEN_SECRET
      DB_DATABASE: konga_db
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"